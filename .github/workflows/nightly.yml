name: nightly

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      # 1️⃣ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3️⃣ Setup pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Set up npm authentication
        run: |
          pnpm config set @valideer:registry=https://registry.npmjs.org
          pnpm config set "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}"
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      #
      # - name: Set up gi
      #   run: |
      #     git status
      #     git config user.name "${{ github.actor }}"
      #     git config user.email "${{ github.actor}}@users.noreply.github.com"

      # 4️⃣ Install dependencies
      - name: Install dependencies
        run: pnpm install

      # 5️⃣ Setup git (needed for Changesets commits/tags)
      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      # 6️⃣ Build all packages
      - name: Build packages
        run: pnpm -r run build

      # 7️⃣ Version packages (pre-release alpha)
      - name: Version packages
        run: |
          npx lerna version --create-release=github --conventional-commits --conventional-prerelease --yes
          npx lerna publish from-git -m "chore: publish" --yes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 8️⃣ Publish changed packages to npm
      # - name: Publish packages
      #   run: pnpm changeset publish
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Mark GitHub Release as pre-release
      #   if: startsWith(github.ref, 'refs/tags/')
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     prerelease: true
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
